{
    "swagger": "2.0",
    "info": {
      "version": "4.0.2",
      "title": "CentreNet API",
      "contact": {
        "name": "Powerleague",
        "email": "admin@powerleague.co.uk"
      }
    },
    "basePath": "http://centrenet.powerleague.com/cgi-bin/ext/WebService",
    "securityDefinitions": {},
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/x-www-form-urlencoded"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/Account/{accountRef}": {
        "get": {
          "summary": "Retrieve account by reference",
          "tags": [
            "Account"
          ],
          "operationId": "getAccount",
          "parameters": [
            {
              "name": "accountRef",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Account details",
              "schema": {
                "$ref": "#/definitions/Account"
              }
            },
            "403": {
              "description": "Access denied",
              "schema": {
                "type":"object",
                "properties": {
                  "Error": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Resource not found",
              "schema": {
                "type":"object",
                "properties": {
                  "Error": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/Account/{accountRef}/Bookings": {
        "get": {
          "summary": "Retrieve bookings by account by reference",
          "tags": [
            "Account"
          ],
          "operationId": "GetAccountBookings",
          "parameters": [
            {
              "name": "accountRef",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Account bookings",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Booking"
                }
              }
            },
            "403": {
              "description": "Access denied",
              "schema": {
                "type":"object",
                "properties": {
                  "Error": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Resource not found",
              "schema": {
                "type":"object",
                "properties": {
                  "Error": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/Account": {
        "post": {
          "summary": "Create account",
          "tags": [
            "Account"
          ],
          "operationId": "createAccount",
          "parameters": [
            {
              "name": "OnlineId",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "SiteId",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "FirstName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "LastName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "DoB",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Email",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Telephone",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Mobile",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Address1",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Address2",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "CityTown",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "County",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "PostCode",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "OptIn",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Opt-in to marketing communications"
            }
          ],
          "responses": {
            "200": {
              "description": "Account details",
              "schema": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        }
      },
      "/Account/{AccountRef}/Payment": {
        "post": {
          "summary": "Process payment",
          "tags": [
            "Account"
          ],
          "operationId": "processPayment",
          "parameters": [
            {
              "name": "AccountRef",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Account Reference"
            },
            {
              "name": "TransactionId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Transaction Id"
            },
            {
              "name": "amount",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Payment Amount"
            },
            {
              "name": "paymentRef",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "SAGE Pay Reference"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Invoice"
              }
            }
          }
        }
      },
      "/Authenticate/{userId}": {
        "get": {
          "summary": "Authenticate session",
          "tags": [
            "Authenticate"
          ],
          "operationId": "authenticate",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Authentication successful",
              "schema": {
                "type": "object",
                "properties": {
                  "AuthToken": { 
                    "type": "string"
                  }
                },
                "required": [ "AuthToken" ]
              }
            },
            "401": {
              "description": "Invalid user/password",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            },
            "403": {
              "description": "Session in use by another user",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/Booking/{bookingId}": {
        "get": {
          "summary": "Retrieve booking",
          "tags": [
            "Booking"
          ],
          "operationId": "GetBooking",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Booking"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "The booking cannot be found"
            }
          }
        },
        "delete": {
          "summary": "Cancel booking",
          "tags": [
            "Booking"
          ],
          "operationId": "cancelBooking",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Booking not found"
            }
          }
        }
      },
      "/Booking": {
        "post": {
          "summary": "Create booking",
          "deprecated": true,
          "tags": [
            "Booking"
          ],
          "operationId": "CreateBooking",
          "parameters": [
            {
              "name": "timeSlotId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking Slot Id"
            },
            {
              "name": "accountRef",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Account Reference"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Membership Number"
            },
            {
              "name": "bookingType",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Booking Type"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/Booking/{bookingId}/Payment": {
        "post": {
          "summary": "Booking payment",
          "tags": [
            "Booking"
          ],
          "operationId": "AllocateBookingPayment",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Booking Id"
            },
            {
              "name": "amount",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Payment Amount"
            },
            {
              "name": "paymentRef",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "SAGE Pay Reference"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Booking"
              }
            }
          }
        }
      },
      "/BubbleParty/{bookingId}": {
        "get": {
          "summary": "Retrieve booking",
          "tags": [
            "BubbleParty"
          ],
          "operationId": "getBubblePartyBooking",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "The booking cannot be found"
            }
          }
        },
        "delete": {
          "summary": "Cancel booking",
          "tags": [
            "BubbleParty"
          ],
          "operationId": "cancelBubblePartyBooking",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Booking not found"
            }
          }
        }
      },
      "/BubbleParty": {
        "post": {
          "summary": "Create Bubble Party",
          "tags": [
            "BubbleParty"
          ],
          "operationId": "createBubblePartyBooking",
          "parameters": [
            {
              "name": "timeSlotId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking Slot Id"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Membership Number"
            },
            {
              "name": "activityId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Activity Id"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/BubbleParty/{bookingId}/Payment": {
        "post": {
          "summary": "Booking payment",
          "tags": [
            "BubbleParty"
          ],
          "operationId": "Create_bookingPayment_",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Booking Id"
            },
            {
              "name": "amount",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Payment Amount"
            },
            {
              "name": "paymentRef",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "SAGE Pay Reference"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/Camp/{CampId}": {
        "get": {
          "summary": "Retrieve Camp",
          "tags": [
            "Camp"
          ],
          "operationId": "retrieveCamp",
          "parameters": [
            {
              "name": "CampId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Camp Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Camp not found"
            }
          }
        }
      },
      "/Camp/{CampId}/Suggest": {
        "get": {
          "summary": "Suggest Alternative Camps",
          "tags": [
            "Camp"
          ],
          "operationId": "getAlternativeCamps",
          "parameters": [
            {
              "name": "CampId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Camp Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Camp not found"
            }
          }
        }
      },
      "/Camp/{CampId}/Price": {
        "get": {
          "summary": "Get Camp Price",
          "tags": [
            "Camp"
          ],
          "operationId": "getCampPrice",
          "parameters": [
            {
              "name": "CampId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Camp Id"
            },
            {
              "name": "childDetails[]",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "Child Details - comma delimited list of names"
            },
            {
              "name": "dates[]",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "Date Details - comma-delimited list of dates required"
            },
            {
              "name": "earlyDates[]",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Comma-delimited list of dates that early drop-off is required"
            },
            {
              "name": "lateDates[]",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Comma-delimited list of dates that last pick-up is required"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Camp not found"
            }
          }
        }
      },
      "/Camp/Site/{SiteId}": {
        "get": {
          "summary": "Retrieve Camps for Site",
          "tags": [
            "Camp"
          ],
          "operationId": "getCampsForSite",
          "parameters": [
            {
              "name": "SiteId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Site Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Site not found"
            }
          }
        }
      },
      "/Camp/All": {
        "get": {
          "summary": "Retrieve all future, incomplete camps",
          "tags": [
            "Camp"
          ],
          "operationId": "getAllCamps",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Sites not found"
            }
          }
        }
      },
      "/Camp/{campId}/Booking": {
        "post": {
          "summary": "Create camp booking",
          "tags": [
            "Camp"
          ],
          "operationId": "createCampBooking",
          "parameters": [
            {
              "name": "campId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Camp id"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet member reference"
            },
            {
              "name": "childDetails[]",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Child Details - comma delimited list of names"
            },
            {
              "name": "dates[]",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Date Details - comma-delimited list of dates required"
            },
            {
              "name": "earlyDates[]",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Comma-delimited list of dates that early drop-off is required"
            },
            {
              "name": "lateDates[]",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Comma-delimited list of dates that last pick-up is required"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/Enquiry": {
        "post": {
          "summary": "Create new enquiry",
          "tags": [
            "Enquiry"
          ],
          "operationId": "createEnquiry",
          "parameters": [
            {
              "name": "SiteId",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "FirstName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "LastName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Email",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Telephone",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "EnquiryType",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Notes",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "OptIn",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Over18",
              "in": "formData",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/Function/{bookingId}": {
        "get": {
          "summary": "Retrieve booking",
          "tags": [
            "Function"
          ],
          "operationId": "getFunctionBooking",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "The booking cannot be found"
            }
          }
        },
        "delete": {
          "summary": "Cancel booking",
          "tags": [
            "Function"
          ],
          "operationId": "cancelFunctionBooking",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Booking not found"
            }
          }
        }
      },
      "/Function": {
        "post": {
          "summary": "Create Function",
          "tags": [
            "Function"
          ],
          "operationId": "createFunctionBooking",
          "parameters": [
            {
              "name": "timeSlotId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking Slot Id"
            },
            {
              "name": "startTime",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Start Time (seconds)"
            },
            {
              "name": "duration",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Duration (minutes)"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Membership Number"
            },
            {
              "name": "activityId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Activity Id"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/Function/{bookingId}/Payment": {
        "post": {
          "summary": "Booking payment",
          "tags": [
            "Function"
          ],
          "operationId": "processFunctionPayment",
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Booking Id"
            },
            {
              "name": "amount",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Payment Amount"
            },
            {
              "name": "paymentRef",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "SAGE Pay Reference"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/GoalScorer/{GameId}/Fixture": {
        "get": {
          "summary": "Retrieve Goal Scorers for Game",
          "tags": [
            "GoalScorer"
          ],
          "operationId": "getGoalScorers",
          "parameters": [
            {
              "name": "GameId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Game Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Game not found"
            }
          }
        }
      },
      "/GoalScorer/{PersonId}/Fixture/{GameId}": {
        "post": {
          "summary": "Add Goal Scorer",
          "tags": [
            "GoalScorer"
          ],
          "operationId": "addGoalScorer",
          "parameters": [
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Person Id"
            },
            {
              "name": "GameId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Game Id"
            },
            {
              "name": "NumGoals",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "No. of Goals"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        },
        "delete": {
          "summary": "Remove Goal Scorer",
          "tags": [
            "GoalScorer"
          ],
          "operationId": "removeGoalScorer",
          "parameters": [
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Person Id"
            },
            {
              "name": "GameId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Game Id"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        }
      },
      "/KidsParty": {
        "get": {
          "summary": "Retrieve available party slots",
          "tags": [
            "KidsParty"
          ],
          "operationId": "getPartyTimeSlots",
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Number of children attending party"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/KidsParty/{timeslotId}/Extras": {
        "get": {
          "summary": "Retrieve party extras",
          "tags": [
            "KidsParty"
          ],
          "operationId": "getPartyExtras",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Selected time slot"
            },
            {
              "name": "ActivityId",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "Selected booking type"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Number of children attending party"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/KidsParty/{timeslotId}/Price": {
        "get": {
          "summary": "Retrieve party price",
          "tags": [
            "KidsParty"
          ],
          "operationId": "getPartyPrice",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Selected party time slot"
            },
            {
              "name": "ActivityId",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "Selected booking type"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "Number of children attending party"
            },
            {
              "name": "itemId[]",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Selected Party extras"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/KidsParty/{timeslotId}": {
        "post": {
          "summary": "Create party booking",
          "tags": [
            "KidsParty"
          ],
          "operationId": "createPartyBooking",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Selected time slot"
            },
            {
              "name": "accountRef",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet account reference"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet member reference"
            },
            {
              "name": "name",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Child's name"
            },
            {
              "name": "numGuests",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Number of children attending the party"
            },
            {
              "name": "itemId[]",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Selected party extras"
            },
            {
              "name": "activityId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Activity Id"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/League/{leagueId}": {
        "get": {
          "summary": "Retrieve league",
          "tags": [
            "League"
          ],
          "operationId": "getLeague",
          "parameters": [
            {
              "name": "leagueId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/League"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "League not found"
            }
          }
        }
      },
      "/League/{leagueId}/Fixtures": {
        "get": {
          "summary": "Retrieve league fixtures",
          "tags": [
            "League"
          ],
          "operationId": "getLeagueFixtures",
          "parameters": [
            {
              "name": "leagueId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Fixture"
                }
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "League not found"
            }
          }
        }
      },
      "/League/{leagueId}/Results": {
        "get": {
          "summary": "Retrieve league results",
          "tags": [
            "League"
          ],
          "operationId": "getLeagueResults",
          "parameters": [
            {
              "name": "leagueId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Result"
                }
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "League not found"
            }
          }
        }
      },
      "/League/{leagueId}/Tables": {
        "get": {
          "summary": "Retrieve league tables",
          "tags": [
            "League"
          ],
          "operationId": "getLeagueTables",
          "parameters": [
            {
              "name": "leagueId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LeagueTable"
                }
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "League not found"
            }
          }
        }
      },
      "/League/Fixtures": {
        "get": {
          "summary": "Retrieve league fixtures",
          "deprecated": true,
          "description": "DEPRECATED: Use <a href=\"#League_getLeagueResults\">getLeagueFixtures</a> instead",
          "tags": [
            "League"
          ],
          "operationId": "getFixtures_",
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "leagueId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Site not found"
            }
          }
        }
      },
      "/League/Fixtures/Team": {
        "get": {
          "summary": "Retrieve team fixtures",
          "deprecated": true,
          "tags": [
            "League"
          ],
          "operationId": "getTeamFixtures_",
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "leagueId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Site not found"
            }
          }
        }
      },
      "/League/Results": {
        "get": {
          "summary": "Retrieve league results",
          "deprecated": true,
          "description": "DEPRECATED: Use <a href=\"#League_getLeagueResults\">getLeagueResults</a> instead",
          "tags": [
            "League"
          ],
          "operationId": "getResults_",
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "leagueId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Site not found"
            }
          }
        }
      },
      "/League/Tables": {
        "get": {
          "summary": "Retrieve league tables",
          "deprecated": true,
          "tags": [
            "League"
          ],
          "operationId": "getTables_",
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "leagueId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "League status: Active (default), Complete"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Site not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}": {
        "get": {
          "summary": "Get Member Profile",
          "tags": [
            "Member"
          ],
          "operationId": "getProfile_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        },
        "put": {
          "summary": "Update Member Profile",
          "tags": [
            "Member"
          ],
          "operationId": "updateProfile_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "FirstName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "LastName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Email",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Telephone",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Mobile",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "DoB",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Gender",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Address1",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Address2",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "CityTown",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "County",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "PostCode",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "CountryId",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "SiteId",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "OptIn",
              "in": "formData",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member Details not found"
            }
          }
        }
      },
      "/Member/Email/{Email}": {
        "get": {
          "summary": "Member Profile",
          "tags": [
            "Member"
          ],
          "operationId": "Get_MemberProfile_",
          "parameters": [
            {
              "name": "Email",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Email"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "Email is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/AccountRef/{AccountRef}": {
        "get": {
          "summary": "Member Profile",
          "tags": [
            "Member"
          ],
          "operationId": "Get_MemberProfile_",
          "parameters": [
            {
              "name": "AccountRef",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Account Reference"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "Account Reference is required"
            },
            "404": {
              "description": "Account not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/Bookings": {
        "get": {
          "summary": "Member Bookings",
          "tags": [
            "Member"
          ],
          "operationId": "Get_MemberBookings_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/Authenticate": {
        "post": {
          "summary": "Member Authenticate",
          "tags": [
            "Member"
          ],
          "operationId": "Create_MemberAuthenticate_",
          "parameters": [
            {
              "name": "Email",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Password",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "Authentication Failed"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/Update": {
        "post": {
          "summary": "Update Member Profile",
          "tags": [
            "Member"
          ],
          "operationId": "updateMember_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "FirstName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "LastName",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Gender",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "Address1",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "Address2",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "CityTown",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "County",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "PostCode",
              "in": "formData",
              "required": false,
              "type": "string"
            },
            {
              "name": "CountryId",
              "in": "formData",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member Details not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/Password/Update": {
        "post": {
          "summary": "Update Member Password",
          "tags": [
            "Member"
          ],
          "operationId": "updateMemberPassword_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Password",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/ContactDetail": {
        "post": {
          "summary": "Create Member Contact Detail",
          "tags": [
            "Member"
          ],
          "operationId": "createMemberContactDetail_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "ContactType",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "person.mobile, person.homephone, etc."
            },
            {
              "name": "ContactValue",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/ContactDetail/{ContactDetailId}/Update": {
        "post": {
          "summary": "Update Member Contact Detail",
          "tags": [
            "Member"
          ],
          "operationId": "updateMemberContactDetail_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "ContactDetailId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "ContactType",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "person.mobile, person.homephone, etc."
            },
            {
              "name": "ContactValue",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/Email": {
        "put": {
          "summary": "Update member email address",
          "tags": [
            "Member"
          ],
          "operationId": "updateMemberEmail_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Email",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/Password": {
        "put": {
          "summary": "Update member password",
          "tags": [
            "Member"
          ],
          "operationId": "updateMemberPassword_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Password",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Member/{OnlineUserId}/ContactDetail/{ContactDetailId}": {
        "delete": {
          "summary": "Delete Member Contact Detail",
          "tags": [
            "Member"
          ],
          "operationId": "deleteMemberContactDetail_",
          "parameters": [
            {
              "name": "OnlineUserId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "ContactDetailId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "OnlineUserId is required"
            },
            "404": {
              "description": "Member not found"
            }
          }
        }
      },
      "/Params/BookingTypes": {
        "get": {
          "summary": "Retrieve Booking Types",
          "tags": [
            "Params"
          ],
          "operationId": "GetBookingTypes",
          "parameters": [
            {
              "name": "BookingTypeCode",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Use * or '' for all"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/BookingType"
                }
              }
            }
          }
        }
      },
      "/Params/ContactMethods": {
        "get": {
          "summary": "Retrieve Contact Methods",
          "tags": [
            "Params"
          ],
          "operationId": "GetContactMethods",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ContactMethod"
                }
              }
            }
          }
        }
      },
      "/Params/Countries": {
        "get": {
          "summary": "Retrieve Countries",
          "tags": [
            "Params"
          ],
          "operationId": "GetCountries",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Country"
                }
              }
            }
          }
        }
      },
      "/Params/Division/{DivisionId}": {
        "get": {
          "summary": "Get Division Name",
          "deprecated": true,
          "tags": [
            "Params"
          ],
          "operationId": "GetDivisionName",
          "parameters": [
            {
              "name": "DivisionId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "DivisionId is required"
            },
            "404": {
              "description": "Division not found"
            }
          }
        }
      },
      "/Params/League/{LeagueId}": {
        "get": {
          "summary": "Get League Name",
          "deprecated": true,
          "tags": [
            "Params"
          ],
          "operationId": "GetLeagueName",
          "parameters": [
            {
              "name": "LeagueId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "LeagueId is required"
            },
            "404": {
              "description": "League not found"
            }
          }
        }
      },
      "/Params/Site/{SiteId}": {
        "get": {
          "summary": "Get Site Name",
          "deprecated": true,
          "tags": [
            "Params"
          ],
          "operationId": "GetSiteName",
          "parameters": [
            {
              "name": "SiteId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "SiteId is required"
            },
            "404": {
              "description": "Site not found"
            }
          }
        }
      },
      "/Party": {
        "get": {
          "summary": "Retrieve available party slots",
          "deprecated": true,
          "tags": [
            "Party"
          ],
          "operationId": "getPartyTimeSlots_",
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Number of children attending party"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Party/{timeslotId}/Extras": {
        "get": {
          "summary": "Retrieve party extras",
          "tags": [
            "Party"
          ],
          "operationId": "getPartyExtras_",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Selected time slot"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Number of children attending party"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Party/{timeslotId}/Price": {
        "get": {
          "summary": "Retrieve party price",
          "tags": [
            "Party"
          ],
          "operationId": "getPartyPrice_",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Selected Party time slot"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "Number of children attending party"
            },
            {
              "name": "itemId[]",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Selected Party extras"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Party/{timeslotId}": {
        "post": {
          "summary": "Create party booking",
          "deprecated": true,
          "tags": [
            "Party"
          ],
          "operationId": "createPartyBooking_",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Selected time slot"
            },
            {
              "name": "accountRef",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet account reference"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet member reference"
            },
            {
              "name": "name",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Child's name"
            },
            {
              "name": "numGuests",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Number of children attending the party"
            },
            {
              "name": "itemId[]",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Selected party extras"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/Player/{TeamId}": {
        "get": {
          "summary": "Retrieve All Players",
          "tags": [
            "Player"
          ],
          "operationId": "retrievePlayers_",
          "parameters": [
            {
              "name": "TeamId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Team Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "404": {
              "description": "Player not found"
            }
          }
        },
        "delete": {
          "summary": "Delete All Players",
          "tags": [
            "Player"
          ],
          "operationId": "deletePlayers_",
          "parameters": [
            {
              "name": "TeamId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "404": {
              "description": "Player not found"
            }
          }
        }
      },
      "/Player/{TeamId}/Person/{PersonId}": {
        "get": {
          "summary": "Retrieve Player Profile",
          "tags": [
            "Player"
          ],
          "operationId": "retrievePlayer_",
          "parameters": [
            {
              "name": "TeamId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Team Id"
            },
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Person Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        },
        "post": {
          "summary": "Create Player Profile",
          "tags": [
            "Player"
          ],
          "operationId": "createPlayer_",
          "parameters": [
            {
              "name": "TeamId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Team Id"
            },
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Person Id"
            },
            {
              "name": "MainContact",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Main Contact"
            },
            {
              "name": "AltContact",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Alt Contact"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        },
        "delete": {
          "summary": "Delete Player Profile",
          "tags": [
            "Player"
          ],
          "operationId": "deletePlayer_",
          "parameters": [
            {
              "name": "TeamId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        }
      },
      "/Player/{PersonId}/Teams": {
        "get": {
          "summary": "Retrieve Players Teams",
          "tags": [
            "Player"
          ],
          "operationId": "retrievePlayersTeams_",
          "parameters": [
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Person Id"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        }
      },
      "/Player/{TeamId}/Person/{PersonId}/Update": {
        "post": {
          "summary": "Update Player Profile",
          "tags": [
            "Player"
          ],
          "operationId": "updatePlayer_",
          "parameters": [
            {
              "name": "TeamId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Team Id"
            },
            {
              "name": "PersonId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Person ID"
            },
            {
              "name": "MainContact",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Main Contact"
            },
            {
              "name": "AltContact",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Alt Contact"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "400": {
              "description": "Player reference is required"
            },
            "404": {
              "description": "Player not found"
            }
          }
        }
      },
      "/Site": {
        "get": {
          "summary": "Retrieve all active sites",
          "tags": [
            "Site"
          ],
          "operationId": "GetSites",
          "parameters": [
            {
              "name": "name",
              "description": "Select sites by name",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "List of Sites",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Site"
                }
              }
            }
          }
        }
      },
      "/Site/{siteId}": {
        "get": {
          "summary": "Retrieve site",
          "tags": [
            "Site"
          ],
          "operationId": "GetSite",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Site details",
              "schema": {
                "$ref": "#/definitions/Site"
              }
            },
            "404": {
              "description": "Site not found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/Site/{siteId}/TimeSlots": {
        "get": {
          "summary": "Retrieve available booking slots",
          "tags": [
            "Site"
          ],
          "operationId": "GetBookingSlots",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "in": "query",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TimeSlot"
                }
              }
            },
            "404": {
              "description": "Site not found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/Site/{siteId}/Tournaments": {
        "get": {
          "summary": "Retrieve active tournaments",
          "tags": [
            "Site"
          ],
          "operationId": "getTournaments_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Site/{siteId}/Camps": {
        "get": {
          "summary": "Retrieve active camps",
          "tags": [
            "Site"
          ],
          "operationId": "getCamps_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "alternative",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Include alternative camps at nearby centres"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Site/{siteId}/BubbleParty": {
        "get": {
          "summary": "Retrieve available bubble party slots",
          "tags": [
            "Site"
          ],
          "operationId": "getBubblePartyTimeSlots_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "all",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Site/{siteId}/Function": {
        "get": {
          "summary": "Retrieve available function slots",
          "tags": [
            "Site"
          ],
          "operationId": "getFunctionTimeSlots_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "all",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Site/{siteId}/Party": {
        "get": {
          "summary": "Retrieve available party slots",
          "tags": [
            "Site"
          ],
          "operationId": "getPartyTimeSlots_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "numGuests",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Number of children attending party"
            },
            {
              "name": "all",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Party"
              }
            }
          }
        },
        "post": {
          "summary": "Create party booking",
          "tags": [
            "Site"
          ],
          "operationId": "createPartyBooking_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Site id"
            },
            {
              "name": "activityId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Activity id"
            },
            {
              "name": "bookingDate",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking date"
            },
            {
              "name": "startTime",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking time"
            },
            {
              "name": "accountRef",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet account reference"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet member reference"
            },
            {
              "name": "name",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Child's name"
            },
            {
              "name": "dob",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Child's date of birth"
            },
            {
              "name": "numGuests",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Number of children attending the party"
            },
            {
              "name": "itemId[]",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Selected Party extras"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Party"
              }
            }
          }
        }
      },
      "/Site/{siteId}/League": {
        "get": {
          "summary": "Query site leagues",
          "tags": [
            "Site"
          ],
          "operationId": "Get_querySiteLeagues_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "leagueName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamName",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Site/{siteId}/Team": {
        "get": {
          "summary": "Query site teams",
          "tags": [
            "Site"
          ],
          "operationId": "Get_querySiteTeams_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "teamName",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Site/{siteId}/TopTeams": {
        "get": {
          "summary": "Query site top teams",
          "tags": [
            "Site"
          ],
          "operationId": "getTopTeams_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Team"
                }
              }
            }
          }
        }
      },
      "/Site/{siteId}/Booking": {
        "post": {
          "summary": "Create new booking",
          "tags": [
            "Site"
          ],
          "operationId": "CreateActivityBooking",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Site Id"
            },
            {
              "name": "activityId",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking Type Id"
            },
            {
              "name": "bookingDate",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking date"
            },
            {
              "name": "startTime",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Booking time"
            },
            {
              "name": "accountRef",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet account reference"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "CentreNet member reference"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful booking",
              "schema": {
                "$ref": "#/definitions/Booking"
              }
            }
          }
        }
      },
      "/Site/{siteId}/GoalsInLast30Days": {
        "get": {
          "summary": "Returns all goals for a site scored in the last 30 days",
          "tags": [
            "Site"
          ],
          "operationId": "getSiteGoalsInLast30Days_",
          "parameters": [
            {
              "name": "siteId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/SiteGoal"
              }
            }
          }
        }
      },
      "/Team/{teamId}": {
        "get": {
          "summary": "Retrieve team",
          "tags": [
            "Team"
          ],
          "operationId": "getTeam_",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Team not found"
            }
          }
        }
      },
      "/Team/{teamId}/Fixtures": {
        "get": {
          "summary": "Retrieve team fixtures",
          "tags": [
            "Team"
          ],
          "operationId": "getTeamFixtures_",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Team not found"
            }
          }
        }
      },
      "/Team/{teamId}/Results": {
        "get": {
          "summary": "Retrieve team results",
          "tags": [
            "Team"
          ],
          "operationId": "getTeamResults_",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Team not found"
            }
          }
        }
      },
      "/Team/{teamId}/Stats": {
        "get": {
          "summary": "Retrieve team stats",
          "tags": [
            "Team"
          ],
          "operationId": "getTeamStats_",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "season",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Request team stats for specific season"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Team not found"
            }
          }
        }
      },
      "/Team/{teamId}/Tables": {
        "get": {
          "summary": "Retrieve team tables",
          "tags": [
            "Team"
          ],
          "operationId": "getTeamTables_",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "Team not found"
            }
          }
        }
      },
      "/TimeSlot/{timeslotId}/Nearby": {
        "get": {
          "summary": "Retrieve available time slots nearby",
          "tags": [
            "TimeSlot"
          ],
          "operationId": "getTimeSlotsNearby_",
          "parameters": [
            {
              "name": "timeslotId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Timelot ID"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/TimeSlot/{timeslotId}": {
        "get": {
          "summary": "Retrieve timeslot",
          "deprecated": true,
          "tags": [
            "TimeSlot"
          ],
          "operationId": "getTimeSlot",
          "parameters": [
            {
              "name": "timeSlotId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "The timeslot cannot be found"
            }
          }
        },
        "put": {
          "summary": "Lock timeslot",
          "deprecated": true,
          "tags": [
            "TimeSlot"
          ],
          "operationId": "lockTimeSlot",
          "parameters": [
            {
              "name": "timeSlotId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "The timeslot cannot be found"
            }
          }
        },
        "delete": {
          "summary": "Unlock timeslot",
          "deprecated": true,
          "tags": [
            "TimeSlot"
          ],
          "operationId": "unlockTimeSlot",
          "parameters": [
            {
              "name": "timeSlotId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "401": {
              "description": "Access denied"
            },
            "404": {
              "description": "The timeslot cannot be found"
            }
          }
        }
      },
      "/Tournament/{tournamentId}": {
        "get": {
          "summary": "Get tournament details",
          "tags": [
            "Tournament"
          ],
          "operationId": "getTournament_",
          "parameters": [
            {
              "name": "tournamentId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Unique ID of tournament"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "object"
              }
            }
          }
        }
      },
      "/Tournament/{tournamentId}/Register": {
        "post": {
          "summary": "Register team",
          "tags": [
            "Tournament"
          ],
          "operationId": "Create_registerTeam_",
          "parameters": [
            {
              "name": "tournamentId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Unique Tournament ID"
            },
            {
              "name": "accountRef",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Account Reference"
            },
            {
              "name": "memberNum",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Membership Number"
            },
            {
              "name": "teamName",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Team Name"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      }
    },
    "definitions": {
      "Error": {
        "type": "object",
        "required": [ "Error" ],
        "properties": {
          "Error": {
            "type": "object",
            "$ref": "#/definitions/ErrorModel"
          }
        }
      },
      "ErrorModel": {
        "type": "object",
        "required": [ "Type", "Message" ],
        "properties": {
          "Type": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "StackTrace": {
            "type": "string"
          }
        }
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "AddressId": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "Line2": {
            "type": "string"
          },
          "Line3": {
            "type": "string"
          },
          "Line4": {
            "type": "string"
          },
          "PostCode": {
            "type": "string"
          },
          "IsValidated": {
            "type": "boolean"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "CountryName": {
            "type": "string"
          }
        },
        "required": [
          "AddressId",
          "Line1",
          "Line2",
          "Line3",
          "Line4",
          "PostCode",
          "CountryId",
          "IsValidated",
          "DateCreated",
          "LastModified",
          "CountryName"
        ]
      },
      "Account": {
        "title": "Account",
        "type": "object",
        "properties": {
          "AccountRef": {
            "type": "string"
          },
          "MemberNum": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "OptIn": {
            "type": "boolean"
          },
          "Active": {
            "type": "boolean"
          },
          "Gender": {
            "type": "string"
          },
          "Birthday": {
            "type": "string",
            "format": "date-time"
          },
          "LastVisit": {
            "type": "string",
            "format": "date-time"
          },
          "Expires": {
            "type": "string",
            "format": "date-time"
          },
          "DiscountCode": {
            "type": "string"
          },
          "DiscountExpires": {
            "type": "string",
            "format": "date-time"
          },
          "OnlineUserId": {
            "type": "string"
          },
          "ClubName": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "Address": {
            "$ref": "#/definitions/Address"
          },
          "Contact": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContactDetail"
            }
          }
        },
        "required": [
          "AccountRef",
          "MemberNum",
          "AccountId",
          "PersonId",
          "FirstName",
          "LastName",
          "Email",
          "OptIn",
          "Active",
          "Gender",
          "Birthday",
          "LastVisit",
          "Expires",
          "DiscountCode",
          "DiscountExpires",
          "OnlineUserId",
          "ClubName",
          "SiteId",
          "Address",
          "Contact"
        ]
      },
      "ContactDetail": {
        "title": "ContactDetail",
        "type": "object",
        "properties": {
          "ContactDetailId": {
            "type": "string"
          },
          "ContactType": {
            "type": "string"
          },
          "ContactValue": {
            "type": "string"
          },
          "OwnerType": {
            "type": "string"
          },
          "OwnerId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "DisplayName": {
            "type": "string"
          }
        },
        "required": [
          "ContactDetailId",
          "ContactType",
          "ContactValue",
          "OwnerType",
          "OwnerId",
          "DateCreated",
          "LastModified",
          "DisplayName"
        ]
      },
      "Invoice": {
        "title": "Invoice",
        "type": "object",
        "properties": {
          "SLTransactionId": {
            "type": "string"
          },
          "TransactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "TransactionRef": {
            "type": "string"
          },
          "AccountRef": {
            "type": "string"
          },
          "AccountName": {
            "type": "string"
          },
          "GoodsTotal": {
            "type": "number",
            "format": "double"
          },
          "VatTotal": {
            "type": "number",
            "format": "double"
          },
          "Payments": {
            "type": "number",
            "format": "double"
          },
          "Discount": {
            "type": "number",
            "format": "double"
          },
          "Balance": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "SLTransactionId",
          "TransactionDate",
          "TransactionRef",
          "AccountRef",
          "AccountName",
          "GoodsTotal",
          "VatTotal",
          "Payments",
          "Discount",
          "Balance"
        ]
      },
      "Session": {
        "title": "Session",
        "type": "object",
        "properties": {
          "AuthToken": {
            "type": "string"
          }
        },
        "required": [
          "AuthToken"
        ]
      },
      "Booking": {
        "title": "Booking",
        "type": "object",
        "required": [ "BookingId", "SiteId", "FacilityId", "TimeSlotId", "PersonId", "AccountId", "BookingDate", "StartTime" ],
        "properties": {
          "BookingId": {
            "type": "string"
          },
          "BookingStatus": {
            "type": "string"
          },
          "BookingType": {
            "type": "string"
          },
          "OriginalBooking": {
            "type": "string",
            "format": "date-time"
          },
          "SiteId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "TimeSlotId": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "AgreementId": {
            "type": "string"
          },
          "StaffId": {
            "type": "string"
          },
          "LinkedBookingId": {
            "type": "string"
          },
          "BookingTypeId": {
            "type": "string"
          },
          "PromotionId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "SiteName": {
            "type": "string"
          },
          "FacilityCode": {
            "type": "string"
          },
          "FacilityName": {
            "type": "string"
          },
          "FacilityTypeId": {
            "type": "string"
          },
          "ActualBooking": {
            "type": "string",
            "format": "date-time"
          },
          "BookingDate": {
            "type": "string",
            "format": "date"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "EndTime": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int32"
          },
          "SlotStatus": {
            "type": "string"
          },
          "BookingName": {
            "type": "string"
          },
          "BaseCharge": {
            "type": "number",
            "format": "double"
          },
          "TotalCharge": {
            "type": "number",
            "format": "double"
          },
          "DepositRequired": {
            "type": "number",
            "format": "double"
          },
          "DepositPaid": {
            "type": "number",
            "format": "double"
          },
          "DepositReturned": {
            "type": "number",
            "format": "double"
          },
          "Payment": {
            "type": "number",
            "format": "double"
          },
          "BalanceDue": {
            "type": "number",
            "format": "double"
          },
          "CancellationFee": {
            "type": "number",
            "format": "double"
          },
          "PaymentDiscount": {
            "type": "number",
            "format": "double"
          },
          "DiscountValue": {
            "type": "number",
            "format": "double"
          },
          "DiscountCode": {
            "type": "string"
          },
          "DiscountName": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "CurrencySymbol": {
            "type": "string"
          },
          "Rental": {
            "type": "boolean"
          },
          "FirstBooking": {
            "type": "boolean"
          }
        }
      },
      "BubbleParty": {
        "title": "BubbleParty",
        "type": "object",
        "properties": {
          "BookingId": {
            "type": "string"
          },
          "BookingStatus": {
            "type": "string"
          },
          "BookingType": {
            "type": "string"
          },
          "OriginalBooking": {
            "type": "string",
            "format": "date-time"
          },
          "SiteId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "TimeSlotId": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "AgreementId": {
            "type": "string"
          },
          "StaffId": {
            "type": "string"
          },
          "LinkedBookingId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "TotalCharge": {
            "type": "number",
            "format": "double"
          },
          "Payment": {
            "type": "number",
            "format": "double"
          },
          "BalanceDue": {
            "type": "number",
            "format": "double"
          },
          "CancellationFee": {
            "type": "number",
            "format": "double"
          },
          "PaymentDiscount": {
            "type": "number",
            "format": "double"
          },
          "DiscountValue": {
            "type": "number",
            "format": "double"
          },
          "DiscountCode": {
            "type": "string"
          },
          "DiscountName": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "BookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string"
          },
          "FacilityName": {
            "type": "string"
          }
        },
        "required": [
          "BookingId",
          "BookingStatus",
          "BookingType",
          "OriginalBooking",
          "SiteId",
          "FacilityId",
          "TimeSlotId",
          "PersonId",
          "AccountId",
          "AgreementId",
          "StaffId",
          "LinkedBookingId",
          "DateCreated",
          "LastModified",
          "TotalCharge",
          "Payment",
          "BalanceDue",
          "CancellationFee",
          "PaymentDiscount",
          "DiscountValue",
          "DiscountCode",
          "DiscountName",
          "CurrencyCode",
          "BookingDate",
          "StartTime",
          "Duration",
          "SiteName",
          "FacilityName"
        ]
      },
      "MemberAuthenticate": {
        "title": "MemberAuthenticate",
        "type": "object",
        "properties": {
          "OnlineUserId": {
            "type": "string"
          }
        },
        "required": [
          "OnlineUserId"
        ]
      },
      "Camp": {
        "title": "Camp",
        "type": "object",
        "properties": {
          "CampId": {
            "type": "string"
          },
          "CampName": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "CampStatus": {
            "type": "string"
          },
          "SponsorName": {
            "type": "string"
          },
          "RegistrationFee": {
            "description": "Fee per person",
            "type": "number",
            "format": "double"
          },
          "RefereeFee": {
            "type": "number",
            "format": "double"
          },
          "MaxCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "CampNotes": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "ActivityTypeId": {
            "type": "string"
          },
          "FacilityTypeId": {
            "type": "string"
          },
          "AnalysisRegistrationFee": {
            "type": "string"
          },
          "AnalysisRefereeFee": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "SiteName": {
            "type": "string"
          },
          "ActivityTypeName": {
            "type": "string"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndTime": {
            "type": "integer",
            "format": "int32"
          },
          "EarlyDropOffPrice": {
            "type": "number",
            "format": "double"
          },
          "LatePickUpPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "CampId",
          "CampName",
          "StartDate",
          "StartTime",
          "CampStatus",
          "SponsorName",
          "RegistrationFee",
          "RefereeFee",
          "MaxCapacity",
          "CampNotes",
          "SiteId",
          "ActivityTypeId",
          "FacilityTypeId",
          "AnalysisRegistrationFee",
          "AnalysisRefereeFee",
          "DateCreated",
          "LastModified",
          "SiteName",
          "ActivityTypeName",
          "EndDate",
          "EndTime",
          "EarlyDropOffPrice",
          "LatePickUpPrice"
        ]
      },
      "Enquiry": {
        "title": "Enquiry",
        "type": "object",
        "properties": {
          "EnquiryId": {
            "type": "string"
          }
        },
        "required": [
          "EnquiryId"
        ]
      },
      "Function": {
        "title": "Function",
        "type": "object",
        "properties": {
          "BookingId": {
            "type": "string"
          },
          "BookingStatus": {
            "type": "string"
          },
          "BookingType": {
            "type": "string"
          },
          "OriginalBooking": {
            "type": "string",
            "format": "date-time"
          },
          "SiteId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "TimeSlotId": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "AgreementId": {
            "type": "string"
          },
          "StaffId": {
            "type": "string"
          },
          "LinkedBookingId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "TotalCharge": {
            "type": "number",
            "format": "double"
          },
          "Payment": {
            "type": "number",
            "format": "double"
          },
          "BalanceDue": {
            "type": "number",
            "format": "double"
          },
          "CancellationFee": {
            "type": "number",
            "format": "double"
          },
          "PaymentDiscount": {
            "type": "number",
            "format": "double"
          },
          "DiscountValue": {
            "type": "number",
            "format": "double"
          },
          "DiscountCode": {
            "type": "string"
          },
          "DiscountName": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "BookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string"
          },
          "FacilityName": {
            "type": "string"
          }
        },
        "required": [
          "BookingId",
          "BookingStatus",
          "BookingType",
          "OriginalBooking",
          "SiteId",
          "FacilityId",
          "TimeSlotId",
          "PersonId",
          "AccountId",
          "AgreementId",
          "StaffId",
          "LinkedBookingId",
          "DateCreated",
          "LastModified",
          "TotalCharge",
          "Payment",
          "BalanceDue",
          "CancellationFee",
          "PaymentDiscount",
          "DiscountValue",
          "DiscountCode",
          "DiscountName",
          "CurrencyCode",
          "BookingDate",
          "StartTime",
          "Duration",
          "SiteName",
          "FacilityName"
        ]
      },
      "GoalScorer": {
        "title": "GoalScorer",
        "type": "object",
        "properties": {
          "GameId": {
            "type": "string"
          },
          "TeamId": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "NumOfGoals": {
            "type": "string"
          }
        },
        "required": [
          "GameId",
          "TeamId",
          "PersonId",
          "NumOfGoals"
        ]
      },
      "Activity": {
        "title": "Activity",
        "type": "object",
        "required": [ "BookingTypeId", "BookingTypeName" ],
        "properties": {
          "BookingTypeId": {
            "type": "string"
          },
          "BookingTypeName": {
            "type": "string"
          },
          "DefaultBookingType": {
            "type": "string"
          },
          "FullPrice": {
            "type": "number",
            "format": "double"
          },
          "DiscountName": {
            "type": "string"
          },
          "DiscountValue": {
            "type": "number",
            "format": "double"
          },
          "DiscountedPrice": {
            "type": "number",
            "format": "double"
          },
          "CurrencyCode": {
            "type": "string"
          }
        }
      },
      "Extra": {
        "title": "Extra",
        "type": "object",
        "properties": {
          "ItemId": {
            "type": "string"
          },
          "ItemCode": {
            "type": "string"
          },
          "ItemName": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "Price": {
            "type": "number",
            "format": "double"
          },
          "TakeAll": {
            "description": "Item part of Take All package",
            "type": "boolean"
          },
          "DiscountValue": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "ItemId",
          "ItemCode",
          "ItemName",
          "Quantity",
          "Price",
          "TakeAll",
          "DiscountValue"
        ]
      },
      "TimeSlot": {
        "title": "TimeSlot",
        "type": "object",
        "required": [ "TimeSlotId", "BookingDate", "StartTime", "Duration", "SiteId", "FacilityId" ],
        "properties": {
          "TimeSlotId": {
            "type": "string"
          },
          "BookingDate": {
            "type": "string",
            "format": "date"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int32"
          },
          "SlotStatus": {
            "type": "string"
          },
          "ShowOnline": {
            "type": "boolean"
          },
          "LockedBy": {
            "type": "string"
          },
          "LockTimeout": {
            "type": "string",
            "format": "date-time"
          },
          "SiteId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "EndTime": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string"
          },
          "FacilityName": {
            "type": "string"
          },
          "FacilityTypeId": {
            "type": "string"
          },
          "FacilityTypeName": {
            "type": "string"
          },
          "DefaultBookingType": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "CurrencySymbol": {
            "type": "string"
          },
          "BookingTypeCode": {
            "type": "string"
          },
          "BookingTypeName": {
            "type": "string"
          },
          "BlockAvailable": {
            "type": "boolean"
          },
          "BookingStart": {
            "type": "string",
            "format": "date-time"
          },
          "Activities": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      },
      "Party": {
        "title": "Party",
        "type": "object",
        "properties": {
          "TimeSlotId": {
            "type": "string"
          },
          "BookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int32"
          },
          "SlotStatus": {
            "type": "string"
          },
          "ShowOnline": {
            "type": "boolean"
          },
          "Discount": {
            "type": "number",
            "format": "double"
          },
          "LockedBy": {
            "type": "string"
          },
          "LockTimeout": {
            "type": "string",
            "format": "date-time"
          },
          "SiteId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "AdhocTimeSlots": {
            "type": "boolean"
          },
          "EndTime": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string"
          },
          "FacilityName": {
            "type": "string"
          },
          "FacilityTypeId": {
            "type": "string"
          },
          "FacilityTypeName": {
            "type": "string"
          },
          "DefaultBookingType": {
            "type": "string"
          },
          "FullPrice": {
            "type": "number",
            "format": "double"
          },
          "DiscountedPrice": {
            "type": "number",
            "format": "double"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "DiscountCode": {
            "type": "string"
          },
          "DiscountName": {
            "type": "string"
          },
          "DiscountValue": {
            "type": "number",
            "format": "double"
          },
          "NumGuests": {
            "type": "integer",
            "format": "int32"
          },
          "TotalPrice": {
            "type": "number",
            "format": "double"
          },
          "Extras": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Extra"
            }
          }
        },
        "required": [
          "TimeSlotId",
          "BookingDate",
          "StartTime",
          "Duration",
          "SlotStatus",
          "ShowOnline",
          "Discount",
          "LockedBy",
          "LockTimeout",
          "SiteId",
          "FacilityId",
          "DateCreated",
          "LastModified",
          "AdhocTimeSlots",
          "EndTime",
          "SiteName",
          "FacilityName",
          "FacilityTypeId",
          "FacilityTypeName",
          "DefaultBookingType",
          "FullPrice",
          "DiscountedPrice",
          "CurrencyCode",
          "DiscountCode",
          "DiscountName",
          "DiscountValue",
          "NumGuests",
          "TotalPrice",
          "Extras"
        ]
      },
      "League": {
        "title": "League",
        "type": "object",
        "properties": {
          "LeagueId": {
            "type": "string"
          },
          "LeagueName": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date"
          },
          "EndDate": {
            "type": "string",
            "format": "date"
          },
          "LeagueStatus": {
            "type": "string"
          },
          "SponsorName": {
            "type": "string"
          },
          "GameFee": {
            "type": "number",
            "format": "double"
          },
          "RegistrationFee": {
            "type": "number",
            "format": "double"
          },
          "StandByFee": {
            "type": "number",
            "format": "double"
          },
          "PointsForWin": {
            "type": "integer"
          },
          "PointsForLoss": {
            "type": "integer"
          },
          "PointsForDraw": {
            "type": "integer"
          },
          "PointsForForfeit": {
            "type": "integer"
          },
          "TeamsPerDivision": {
            "type": "integer"
          },
          "NumDivisions": {
            "type": "integer"
          },
          "NumRounds": {
            "type": "integer"
          },
          "NumTeams": {
            "type": "integer"
          },
          "GamesPerWeek": {
            "type": "integer"
          },
          "SiteId": {
            "type": "string"
          },
          "SiteName": {
            "type": "string"
          },
          "ActivityTypeId": {
            "type": "string"
          },
          "ActivityTypeName": {
            "type": "string"
          },
          "FacilityTypeId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "Divisions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Division"
            }
          }
        },
        "required": [
          "LeagueId", "LeagueName"
        ]
      },
      "LeagueMin": {
        "title": "LeagueMin",
        "type": "object",
        "properties": {
          "LeagueId": {
            "type": "string"
          },
          "LeagueName": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "LeagueStatus": {
            "type": "string"
          },
          "Divisions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Division"
            }
          }
        },
        "required": [
          "LeagueId",
          "LeagueName",
          "StartDate",
          "LeagueStatus",
          "Divisions"
        ]
      },
      "Division": {
        "title": "Division",
        "type": "object",
        "properties": {
          "DivisionId": {
            "type": "string"
          },
          "DivisionCode": {
            "type": "string"
          },
          "DivisionName": {
            "type": "string"
          },
          "SponsorName": {
            "type": "string"
          },
          "NumVacancies": {
            "type": "integer"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "DivisionId", "DivisionName"
        ]
      },
      "Fixture": {
        "title": "Fixture",
        "type": "object",
        "properties": {
          "GameId": {
            "type": "string"
          },
          "GameName": {
            "type": "string"
          },
          "ScheduledDate": {
            "type": "string",
            "format": "date"
          },
          "PlayedDate": {
            "type": "string",
            "format": "date"
          },
          "GameStatus": {
            "type": "string"
          },
          "OriginalDate": {
            "type": "string",
            "format": "date"
          },
          "Type": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "DivisionId": {
            "type": "string"
          },
          "TeamId": {
            "type": "string"
          },
          "VisitingTeamId": {
            "type": "string"
          },
          "BookingId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "TournamentId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "FormattedTime": {
            "type": "string"
          },
          "FormattedDate": {
            "type": "string"
          },
          "FacilityName": {
            "type": "string"
          },
          "DivisionName": {
            "type": "string"
          },
          "LeagueId": {
            "type": "string"
          },
          "LeagueName": {
            "type": "string"
          },
          "TeamName": {
            "type": "string"
          },
          "VisitingTeamName": {
            "type": "string"
          }
        },
        "required": [
          "GameId",
          "GameName",
          "ScheduledDate",
          "GameStatus",
          "OriginalDate",
          "Type",
          "SiteId",
          "DivisionId",
          "TeamId",
          "VisitingTeamId",
          "BookingId",
          "FacilityId",
          "StartTime",
          "FacilityName",
          "DivisionName",
          "LeagueId",
          "LeagueName",
          "TeamName",
          "VisitingTeamName"
        ]
      },
      "Result": {
        "title": "Result",
        "type": "object",
        "properties": {
          "GameId": {
            "type": "string"
          },
          "GameName": {
            "type": "string"
          },
          "ScheduledDate": {
            "type": "string",
            "format": "date-time"
          },
          "PlayedDate": {
            "type": "string",
            "format": "date-time"
          },
          "HomeScore": {
            "type": "integer",
            "format": "int32"
          },
          "VisitorScore": {
            "type": "integer",
            "format": "int32"
          },
          "GameStatus": {
            "type": "string"
          },
          "OriginalDate": {
            "type": "string",
            "format": "date-time"
          },
          "Type": {
            "type": "string"
          },
          "HomePP": {
            "type": "integer",
            "format": "int32"
          },
          "VisitorPP": {
            "type": "integer",
            "format": "int32"
          },
          "ForfeitTeam": {
            "type": "string"
          },
          "PostponeTeam": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "DivisionId": {
            "type": "string"
          },
          "TeamId": {
            "type": "string"
          },
          "VisitingTeamId": {
            "type": "string"
          },
          "BookingId": {
            "type": "string"
          },
          "RefereeId": {
            "type": "string"
          },
          "FacilityId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "StartTime": {
            "type": "integer",
            "format": "int32"
          },
          "FacilityName": {
            "type": "string"
          },
          "DivisionName": {
            "type": "string"
          },
          "LeagueId": {
            "type": "string"
          },
          "LeagueName": {
            "type": "string"
          },
          "TeamName": {
            "type": "string"
          },
          "VisitingTeamName": {
            "type": "string"
          },
          "RefereeName": {
            "type": "string"
          }
        },
        "required": [
          "GameId",
          "GameName",
          "ScheduledDate",
          "PlayedDate",
          "HomeScore",
          "VisitorScore",
          "GameStatus",
          "OriginalDate",
          "Type",
          "HomePP",
          "VisitorPP",
          "ForfeitTeam",
          "PostponeTeam",
          "SiteId",
          "DivisionId",
          "TeamId",
          "VisitingTeamId",
          "BookingId",
          "RefereeId",
          "FacilityId",
          "DateCreated",
          "LastModified",
          "StartTime",
          "FacilityName",
          "DivisionName",
          "LeagueId",
          "LeagueName",
          "TeamName",
          "VisitingTeamName",
          "RefereeName"
        ]
      },
      "MemberProfile": {
        "title": "MemberProfile",
        "type": "object",
        "properties": {
          "AccountRef": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "MemberNum": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "MetaphoneName": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "Gender": {
            "type": "string"
          },
          "Birthday": {
            "type": "string",
            "format": "date-time"
          },
          "LastVisit": {
            "type": "string",
            "format": "date-time"
          },
          "Expires": {
            "type": "string",
            "format": "date-time"
          },
          "DiscountCode": {
            "type": "string"
          },
          "DiscountExpires": {
            "type": "string",
            "format": "date-time"
          },
          "OnlineUserId": {
            "type": "string"
          },
          "ClubName": {
            "type": "string"
          },
          "EmailNotifications": {
            "type": "boolean"
          },
          "OptIn": {
            "type": "boolean"
          },
          "ReferredBy": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "AddressId": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ModifiedBy": {
            "type": "string"
          }
        },
        "required": [
          "AccountRef",
          "PersonId",
          "MemberNum",
          "FirstName",
          "LastName",
          "MetaphoneName",
          "Email",
          "Active",
          "Gender",
          "Birthday",
          "LastVisit",
          "Expires",
          "DiscountCode",
          "DiscountExpires",
          "OnlineUserId",
          "ClubName",
          "EmailNotifications",
          "OptIn",
          "ReferredBy",
          "SiteId",
          "AddressId",
          "AccountId",
          "DateCreated",
          "LastModified",
          "CreatedBy",
          "ModifiedBy"
        ]
      },
      "MemberAddress": {
        "title": "MemberAddress",
        "type": "object",
        "properties": {
          "AddressId": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "Line2": {
            "type": "string"
          },
          "Line3": {
            "type": "string"
          },
          "Line4": {
            "type": "string"
          },
          "PostCode": {
            "type": "string"
          },
          "CountryId": {
            "type": "string"
          }
        },
        "required": [
          "AddressId",
          "Line1",
          "Line2",
          "Line3",
          "Line4",
          "PostCode",
          "CountryId"
        ]
      },
      "MemberContacts": {
        "title": "MemberContacts",
        "type": "object",
        "properties": {
          "ContactDetailId": {
            "type": "string"
          },
          "ContactType": {
            "type": "string"
          },
          "ContactValue": {
            "type": "string"
          }
        },
        "required": [
          "ContactDetailId",
          "ContactType",
          "ContactValue"
        ]
      },
      "MemberBooking": {
        "title": "MemberBooking",
        "type": "object",
        "properties": {
          "BookingId": {
            "type": "string"
          },
          "BookingStatus": {
            "type": "string"
          },
          "BookingType": {
            "type": "string"
          },
          "OriginalBooking": {
            "type": "string"
          }
        },
        "required": [
          "BookingId",
          "BookingStatus",
          "BookingType",
          "OriginalBooking"
        ]
      },
      "BookingType": {
        "title": "BookingType",
        "type": "object",
        "properties": {
          "BookingTypeId": {
            "type": "string"
          },
          "BookingTypeCode": {
            "type": "string"
          },
          "BookingTypeName": {
            "type": "string"
          },
          "BookingDuration": {
            "type": "integer",
            "format": "int32"
          },
          "Selectable": {
            "type": "boolean"
          },
          "LoyaltyOptions": {
            "type": "boolean"
          },
          "DefaultBookingType": {
            "type": "string"
          },
          "AvailableOnline": {
            "type": "boolean"
          }
        },
        "required": [
          "BookingTypeId",
          "BookingTypeCode",
          "BookingTypeName",
          "BookingDuration",
          "Selectable",
          "LoyaltyOptions",
          "DefaultBookingType",
          "AvailableOnline"
        ]
      },
      "ContactMethod": {
        "title": "ContactMethod",
        "type": "object",
        "properties": {
          "ContactMethodId": {
            "type": "string"
          },
          "ContactMethodCode": {
            "type": "string"
          },
          "ContactMethodName": {
            "type": "string"
          }
        },
        "required": [
          "ContactMethodId",
          "ContactMethodCode",
          "ContactMethodName"
        ]
      },
      "Country": {
        "title": "Country",
        "type": "object",
        "properties": {
          "CountryId": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "CountryName": {
            "type": "string"
          }
        },
        "required": [
          "CountryId",
          "CountryCode",
          "CountryName"
        ]
      },
      "Player": {
        "title": "Player",
        "type": "object",
        "properties": {
          "TeamId": {
            "type": "string"
          },
          "PersonId": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        },
        "required": [
          "TeamId",
          "PersonId",
          "FirstName",
          "LastName",
          "Email"
        ]
      },
      "Tournament": {
        "title": "Tournament",
        "type": "object",
        "properties": {
          "TournamentId": {
            "type": "string"
          },
          "TournamentCode": {
            "type": "string"
          },
          "TournamentName": {
            "type": "string"
          },
          "TournamentDate": {
            "type": "string",
            "format": "date-time"
          },
          "TournamentStatus": {
            "type": "string"
          },
          "SponsorName": {
            "type": "string"
          },
          "RegistrationFee": {
            "type": "number",
            "format": "double"
          },
          "SiteId": {
            "type": "string"
          },
          "SiteName": {
            "type": "string"
          },
          "ActivityTypeId": {
            "type": "string"
          },
          "ActivityTypeName": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "Teams": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TournamentTeam"
            }
          }
        },
        "required": [
          "TournamentId",
          "TournamentCode",
          "TournamentName",
          "TournamentDate",
          "TournamentStatus",
          "SponsorName",
          "RegistrationFee",
          "SiteId",
          "SiteName",
          "ActivityTypeId",
          "ActivityTypeName",
          "DateCreated",
          "LastModified",
          "Teams"
        ]
      },
      "Site": {
        "title": "Site",
        "type": "object",
        "properties": {
          "SiteId": {
            "type": "string"
          },
          "SiteCode": {
            "type": "string"
          },
          "SiteName": {
            "type": "string"
          },
          "RegionId": {
            "type": "string"
          },
          "RegionName": {
            "type": "string"
          },
          "AddressId": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "Address": {
            "$ref": "#/definitions/Address"
          },
          "OpeningTime": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpeningTime"
            }
          }
        },
        "required": [
          "SiteId",
          "SiteCode",
          "SiteName",
          "RegionId",
          "RegionName",
          "AddressId",
          "Address"
        ]
      },
      "OpeningTime": {
        "title": "OpeningTime",
        "type": "object",
        "properties": {
          "Day": {
            "type": "string",
            "enum": [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]
          },
          "Date": {
            "type": "string",
            "format": "date"
          },
          "Open": {
            "type": "string"
          },
          "Close": {
            "type": "string"
          }
        },
        "required": [ "Day", "Date" ]
      },
      "SiteGoal": {
        "title": "SiteGoal",
        "type": "object",
        "properties": {
          "SiteId": {
            "type": "string"
          },
          "GoalsScoredInLast30Days": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "SiteId",
          "GoalsScoredInLast30Days"
        ]
      },
      "LeagueTable": {
        "title": "LeagueTable",
        "type": "object",
        "properties": {
          "TeamName": {
            "type": "string"
          },
          "LeagueName": {
            "type": "string"
          },
          "DivisionName": {
            "type": "string"
          },
          "LeagueId": {
            "type": "string"
          },
          "DivisionId": {
            "type": "string"
          },
          "TeamId": {
            "type": "string"
          },
          "Wins": {
            "type": "integer",
            "format": "int32"
          },
          "Losses": {
            "type": "integer",
            "format": "int32"
          },
          "Draws": {
            "type": "integer",
            "format": "int32"
          },
          "GoalsFor": {
            "type": "integer",
            "format": "int32"
          },
          "GoalsAgainst": {
            "type": "integer",
            "format": "int32"
          },
          "Points": {
            "type": "integer",
            "format": "int32"
          },
          "PenaltyPoints": {
            "type": "integer",
            "format": "int32"
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "TeamName",
          "LeagueName",
          "DivisionName",
          "LeagueId",
          "DivisionId",
          "TeamId",
          "Wins",
          "Losses",
          "Draws",
          "GoalsFor",
          "GoalsAgainst",
          "Points",
          "PenaltyPoints",
          "LastModified"
        ]
      },
      "SeasonStats": {
        "title": "SeasonStats",
        "type": "object",
        "properties": {
          "Season": {
            "type": "integer",
            "format": "int32"
          },
          "GamesPlayed": {
            "type": "integer",
            "format": "int32"
          },
          "Wins": {
            "type": "integer",
            "format": "int32"
          },
          "Losses": {
            "type": "integer",
            "format": "int32"
          },
          "Draws": {
            "type": "integer",
            "format": "int32"
          },
          "Points": {
            "type": "integer",
            "format": "int32"
          },
          "PenaltyPoints": {
            "type": "integer",
            "format": "int32"
          },
          "GoalsFor": {
            "type": "integer",
            "format": "int32"
          },
          "GoalsAgainst": {
            "type": "integer",
            "format": "int32"
          },
          "GoalDifference": {
            "type": "integer",
            "format": "int32"
          },
          "AverageFor": {
            "type": "integer",
            "format": "int32"
          },
          "AverageAgainst": {
            "type": "integer",
            "format": "int32"
          },
          "MostScored": {
            "type": "integer",
            "format": "int32"
          },
          "MostConceeded": {
            "type": "integer",
            "format": "int32"
          },
          "BiggestWin": {
            "type": "string"
          },
          "BiggestLoss": {
            "type": "string"
          },
          "WinStreak": {
            "type": "integer",
            "format": "int32"
          },
          "LoseStreak": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "Season",
          "GamesPlayed",
          "Wins",
          "Losses",
          "Draws",
          "Points",
          "PenaltyPoints",
          "GoalsFor",
          "GoalsAgainst",
          "GoalDifference",
          "AverageFor",
          "AverageAgainst",
          "MostScored",
          "MostConceeded",
          "BiggestWin",
          "BiggestLoss",
          "WinStreak",
          "LoseStreak"
        ]
      },
      "Team": {
        "title": "Team",
        "type": "object",
        "required": [ "TeamId", "TeamName" ],
        "properties": {
          "TeamId": {
            "type": "string"
          },
          "TeamName": {
            "type": "string"
          },
          "TeamStatus": {
            "type": "string"
          },
          "Players": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Player"
            }
          }
        }
      },
      "TeamStats": {
        "title": "TeamStats",
        "type": "object",
        "properties": {
          "TeamId": {
            "type": "string"
          },
          "TeamName": {
            "type": "string"
          },
          "CurrentForm": {
            "type": "string"
          },
          "Stats": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SeasonStats"
            }
          }
        },
        "required": [
          "TeamId",
          "TeamName",
          "CurrentForm",
          "Stats"
        ]
      },
      "TournamentTeam": {
        "title": "TournamentTeam",
        "type": "object",
        "properties": {
          "TournamentId": {
            "type": "string"
          },
          "TeamName": {
            "type": "string"
          }
        },
        "required": [
          "TournamentId",
          "TeamName"
        ]
      }
    }
  }